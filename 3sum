头尾双指针
主要是注意去重。符合条件的时候，一方如果相同继续移。
至少要n-1个不同
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
          int len = nums.size();
        sort(nums.begin(),nums.end());
        vector<vector<int>> result;
   
        for(int i = 0; i < len-2; i++ ){
            if(i>0&&nums[i]==nums[i-1]) continue;
            int m = i+1;
            int n = len-1;
            int tar = -nums[i];
            while(m<n){
                //注意把m和i的范围分开，这两者可以一样
             
                if(nums[m]+nums[n] == tar){
                    result.push_back({nums[i],nums[m],nums[n]});
                    m++;
                    n--;
                    while(m<n&&nums[m]==nums[m-1]){
                        m++;
                    }
                }
               else if (nums[m]+nums[n] <= tar) m++;
               else if (nums[m]+nums[n] >= tar) n--;
            }
        }
        return result;
    }
};
