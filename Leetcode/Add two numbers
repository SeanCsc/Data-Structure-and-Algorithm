两个链表看作数字 直接求和
无法确定头是哪个的时候用dummy node
关键在于设置进位，每次前进。
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int val;
        int c = 0;
        ListNode* dummy = new ListNode(0);
        ListNode* p = dummy;
        while(l1!=NULL && l2!= NULL){
            int tmp = l1->val + l2->val+c;
            val = (tmp) %10 ;
            c = (tmp) /10;
            p->next = new ListNode(val);
            p = p->next;
            l1 = l1->next;
            l2 = l2->next;
            
        }
        while(l1==NULL && l2 != NULL){
            int tmp = l2->val + c;
           val = (tmp)%10;
            p->next = new ListNode(val) ;
             c = (tmp)/10;
             p = p->next;
            l2 = l2->next;
            
        }
        while(l2 == NULL && l1!= NULL){
            int tmp = l1->val + c;
           val = (tmp)%10;
            
            p->next = new ListNode(val) ;
             c = (tmp)/10;
             p = p->next;
            l1 = l1->next; 
            
        }
        if(c== 1) p->next = new ListNode(1);
        return dummy->next;
    }
};
