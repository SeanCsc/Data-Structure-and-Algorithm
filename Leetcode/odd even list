链表的重新组合型
两个指针（dummy node) 分别引出各自的部分，最后把一部分接到另一部分的后面。
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(head == NULL || head->next == NULL) return head;
        ListNode *p1 = head;
        ListNode *p2 = head->next;
        ListNode *tmp = p2;
        while(p2!= NULL && p2->next != NULL){
            p1->next = p2->next;
            p1 = p2->next;
            p2->next = p1->next;
            p2 = p1->next;
        }
        p1->next = tmp;
            return head;
    }

};
