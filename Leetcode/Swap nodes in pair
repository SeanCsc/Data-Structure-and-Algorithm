基本的链表操作套路。
别丢链(别丢头）,双指针循环操作,注意要使用.next!=null的时候自己也一定要判断，否则很有可能nullPointer。
确定好循环的判断条件，确定好链表的操作流程，执行好一个然后让后面的都在同一个相对位置就行。
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode swapPairs(ListNode head) {
        //corner
        if(head==null || head.next == null) return head;
        //initialization
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        //status
        ListNode l1 = dummy;
        ListNode l2 = head;
        while(l2!=null && l2.next!=null){
            ListNode next = l2.next.next; //biediulian
            l1.next = l2.next; //biediutou
            l2.next.next = l2;
            l2.next = next;   
            l1 = l2;
            l2 = next;
        }
        return dummy.next;
    }
}
