主要是根据质数的性质（只能被1和自身整除）,建立一个mask，从2开始除，在一次遍历中，能被除掉的就用mask标记，每到一个值，如果没有被mask掉说明之前没有可以整除掉他的。
class Solution {
public:
    int countPrimes(int n) {
        if(n == 0) return 0;
       bool mask[n] = {false};
        int sum = 0;
       for( int i = 2; i<n; i++){ //标记一个起点
           if(mask[i] == false){
               sum++;
           }
           for(int j = 2; i*j < n;j++){
               mask[i*j] = true;
           }
       }
        return sum;
    }
};
